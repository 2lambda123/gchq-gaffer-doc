# Function package names have been updated to align with java 8 Predicate, BinaryOperator and Function.
uk.gov.gchq.gaffer.function.aggregate.FreqMapAggregator,uk.gov.gchq.gaffer.binaryoperator.FreqMapAggregator
uk.gov.gchq.gaffer.function.aggregate.IntegerFreqMapAggregator,uk.gov.gchq.gaffer.binaryoperator.IntegerFreqMapAggregator

# Functions have been moved to Koryphe project.
uk.gov.gchq.gaffer.function.IsA,uk.gov.gchq.koryphe.impl.predicate.IsA
uk.gov.gchq.gaffer.function.aggregate,uk.gov.gchq.koryphe.impl.binaryoperator
uk.gov.gchq.gaffer.function.MapFilter,uk.gov.koryphe.predicate.PredicateMap
uk.gov.gchq.gaffer.function.filter,uk.gov.gchq.koryphe.impl.predicate
uk.gov.gchq.gaffer.function.transform,uk.gov.gchq.koryphe.impl.function

# Manually update function methods:
# - FilterFunction.isValid -> Predicate.test
# - AggregateFunction.aggregate -> BinaryOperator.apply
# - SimpleAggregateFunction._aggregate -> KorypheBinaryOperator._apply
# - TransformFunction.transform -> Function.apply

# Manually change implementations of FilterFunctions to extend KoryphePredicate<INPUT_TYPE>. For FilterFunctions that require 2 or more inputs (X) you should implement KoryphePredicateX. The input annotation is not longer used.

# Manually change implementations of AggregateFunctions to implement KorypheBinaryOperator<TYPE>. The implementations should now be stateless. To merge 2 objects together, A and B, you can just add the contents of B to object A. The input/output annotations are not longer used.

# Manually change implementations of TransformFunctions to implement KorypheFunction. For TransformFunctions that require 2 or more inputs (X) you should implement KorypheFunctionX. The input/output annotations are not longer used.

# ElementGenerator has been split into ElementGenerator and ObjectGenerator
# - Manually update your implementations to use the new interfaces
# - The REST end point has been split into /graph/elementGenerators and /graph/objectGenerators

# Some operations have been renamed
EdgeSeedExtractor,EdgeIdExtractor
EntitySeedExtractor,EntityIdExtractor
GetAdjacentEntitySeeds,GetAdjacentIds
GetRelatedEdges,GetEdges
GetRelatedEntities,GetEntities
GetRelatedElements,GetElements
GetElements<>,GetElements
GetElements<Element>,GetElements
GetAllElements<Element>,GetAllElements
GetAllElements<>,GetAllElements
uk.gov.gchq.gaffer.operation.impl.export.Exporter,uk.gov.gchq.gaffer.operation.export.Exporter
uk.gov.gchq.gaffer.operation.impl.Deduplicate,uk.gov.gchq.gaffer.operation.impl.output.ToSet
new Deduplicate,new ToSet
uk.gov.gchq.gaffer.operation.GetOperation.IncludeIncomingOutgoingType,uk.gov.gchq.gaffer.operation.graph.SeededGraphFilters.IncludeIncomingOutgoingType
GetOperation.IncludeIncomingOutgoingType,SeededGraphFilters.IncludeIncomingOutgoingType
uk.gov.gchq.gaffer.operation.GetOperation.IncludeEdgeType,uk.gov.gchq.gaffer.operation.graph.GraphFilters.DirectedType
IncludeEdgeType,DirectedType
DirectedType.ALL,DirectedType.BOTH
.includeEdges(,.directedType(

# - Manually change GetEdges and GetEntities to GetElements with a View.
# - Manually change GetAllEdges and GetAllEntities to GetAllElements with a View.

# Operation builder methods have been renamed to input
.addSeed(,.input(
.addSeedB(,.inputB(
.seeds(,.input(
.seedsB(,.inputB(
.elements(,.input(
.objects(,.input(
"seeds":,"input":
"seeds" :,"input" :
"seedsB":,"inputB":
"seedsB" :,"inputB" :
"elements":,"input":
"elements" :,"input" :
"objects":,"input":
"objects" :,"input" :
.populateProperties(true),
"populateProperties":true,
"populateProperties": true,
"populateProperties" : true,
.populateProperties(false),
"populateProperties":false,
"populateProperties": false,
"populateProperties" : false,
.deduplicate(false),
"deduplicate":false,
"deduplicate": false,
"deduplicate" : false,

# - Manually change any instances of .input(x).input(y) to input(x, y)

# Some Operation options have been removed
# - Manually remove usages of populateProperties (this never used to do anything).
# - Manually replace usages of includeEntities with a view to control if entities/edges are required.
# - Manually replace usages of includeEdges or directedType(DirectedType.NONE) with a view to control if entities/edges are required. To limit directed/undirected edges there is a new option "directedType".
# - Manually replace usages of limitResults option on operation (e.g GetElements) with and operation chain with a Limit operation (e.g OperationChain[GetElements, Limit])
# - Manually replace usages of deduplicate option on operation (e.g GetElements) with and operation chain with a ToSet operation (e.g OperationChain[GetElements, ToSet])

# The Pair classes have been moved to the commonutil module
uk.gov.gchq.gaffer.accumulostore.utils.Pair,uk.gov.gchq.gaffer.commonutil.pair.Pair
uk.gov.gchq.gaffer.mapstore.utils.Pair,uk.gov.gchq.gaffer.commonutil.pair.Pair
